/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Faucet, ERC20FaucetInterface } from "../../src/ERC20Faucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "_metadataRenderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalClaimableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "ClaimableOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "FaucetDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "MintInvalidStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "MintNoDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "MintNoValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "MintValueMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "OnlySupplier",
    type: "error",
  },
  {
    inputs: [],
    name: "RescindUnrescindable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "UnexpectedMsgValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "claimableAmountForFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getFaucetDetailsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "faucetStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "supplier",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeRescinded",
            type: "bool",
          },
        ],
        internalType: "struct IFaucet.FaucetDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "_faucetToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataRenderer",
    outputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_faucetStrategy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_canBeRescinded",
        type: "bool",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_remainingTokenDest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "rescind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620021f7380380620021f783398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b60805161216262000095600039600081816102f4015261111901526121626000f3fe6080604052600436106101355760003560e01c8063635f92ad116100ab578063a22cb4651161006f578063a22cb46514610369578063aad3ec9614610389578063b88d4fde146103a9578063c38e4b6e146103c9578063c87b56dd146103f6578063e985e9c51461041657600080fd5b8063635f92ad146102cf57806370319970146102e257806370a082311461031657806395d89b41146103365780639d4993631461034b57600080fd5b806318160ddd116100fd57806318160ddd1461020b57806323b872dd1461022f57806332f7a8221461024f57806342842e0e1461026f57806358a4c99f1461028f5780636352211e146102af57600080fd5b806301ffc9a71461013a57806306fdde031461016f578063077f224a14610191578063081812fc146101b3578063095ea7b3146101eb575b600080fd5b34801561014657600080fd5b5061015a6101553660046119ec565b610436565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610488565b6040516101669190611a61565b34801561019d57600080fd5b506101b16101ac366004611b56565b61051a565b005b3480156101bf57600080fd5b506101d36101ce366004611bce565b610600565b6040516001600160a01b039091168152602001610166565b3480156101f757600080fd5b506101b1610206366004611be7565b610688565b34801561021757600080fd5b5061022160975481565b604051908152602001610166565b34801561023b57600080fd5b506101b161024a366004611c13565b610799565b34801561025b57600080fd5b506101b161026a366004611be7565b6107ca565b34801561027b57600080fd5b506101b161028a366004611c13565b610967565b34801561029b57600080fd5b506102216102aa366004611c54565b610982565b3480156102bb57600080fd5b506101d36102ca366004611bce565b610ab7565b6102216102dd366004611c84565b610b2e565b3480156102ee57600080fd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b34801561032257600080fd5b50610221610331366004611ce3565b610db0565b34801561034257600080fd5b50610184610e37565b34801561035757600080fd5b506099546001600160a01b03166101d3565b34801561037557600080fd5b506101b1610384366004611d00565b610e46565b34801561039557600080fd5b506101b16103a4366004611be7565b610e55565b3480156103b557600080fd5b506101b16103c4366004611d39565b610f70565b3480156103d557600080fd5b506103e96103e4366004611bce565b610fa2565b6040516101669190611e0d565b34801561040257600080fd5b50610184610411366004611bce565b61106f565b34801561042257600080fd5b5061015a610431366004611e1b565b61119e565b60006001600160e01b031982166380ac58cd60e01b148061046757506001600160e01b03198216635b5e139f60e01b145b8061048257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461049790611e49565b80601f01602080910402602001604051908101604052809291908181526020018280546104c390611e49565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b5050505050905090565b600054610100900460ff166105355760005460ff1615610539565b303b155b6105a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156105c3576000805461ffff19166101011790555b6105cd84846111cc565b609980546001600160a01b0319166001600160a01b03841617905580156105fa576000805461ff00191690555b50505050565b600061060b826111fd565b61066c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610598565b506000908152606960205260409020546001600160a01b031690565b600061069382610ab7565b9050806001600160a01b0316836001600160a01b031614156107015760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610598565b336001600160a01b038216148061071d575061071d813361119e565b61078a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610598565b610794838361121a565b505050565b6107a33382611288565b6107bf5760405162461bcd60e51b815260040161059890611e84565b610794838383611352565b6000818152609a60205260409020600501546001600160a01b03163314610828576000818152609a6020526040908190206005015490516261061160e31b81523360048201526001600160a01b039091166024820152604401610598565b6000818152609a6020526040902060050154600160a01b900460ff166108615760405163351bf21360e11b815260040160405180910390fd5b6000818152609a6020908152604091829020825160e081018452815480825260018301549382018490526002830154948201949094526003820154606082015260048201546001600160a01b03908116608083015260059092015480831660a0830152600160a01b900460ff16151560c0820152609954909391169163a9059cbb9186916108ee91611eeb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d9190611f02565b50610794826114dc565b61079483838360405180602001604052806000815250610f70565b6000828152609a60209081526040808320815160e081018352815480825260018301549482019490945260028201548184018190526003830154606083018190526004808501546001600160a01b039081166080860181905260059096015490811660a0860152600160a01b900460ff16151560c08501529451631ebbf28960e21b81529485019590955260248401526044830193909352606482018590528391637aefca2490608401602060405180830381865afa158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190611f1f565b8251909150811115610a9f57815160405163359f331360e11b8152610598918391600401918252602082015260400190565b6020820151610aae9082611eeb565b95945050505050565b6000818152606760205260408120546001600160a01b0316806104825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610598565b60003415610b5157604051635de2122160e01b8152346004820152602401610598565b84610b6f5760405163346a748560e21b815260040160405180910390fd5b83610b8d57604051631677bcf360e21b815260040160405180910390fd5b6040516301ffc9a760e01b8152631ebbf28960e21b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611f02565b610c245760405163e0a8828960e01b81526001600160a01b0384166004820152602401610598565b609854610c318782611546565b6099546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cac9190611f02565b506040518060e00160405280878152602001600081526020014281526020018642610cd79190611f38565b81526001600160a01b03808716602080840191909152336040808501919091528715156060948501526000868152609a83528181208651815592860151600184015590850151600283015592840151600382015560808401516004820180549184166001600160a01b031990921691909117905560a08401516005909101805460c0909501511515600160a01b026001600160a81b03199095169190921617929092179091556097805491610d8b83611f50565b909155505060988054906000610da083611f50565b9091555090979650505050505050565b60006001600160a01b038216610e1b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610598565b506001600160a01b031660009081526068602052604090205490565b60606066805461049790611e49565b610e51338383611667565b5050565b610e5e81610ab7565b6001600160a01b0316336001600160a01b031614610eac5733610e8082610ab7565b60405163a3ee740f60e01b81526001600160a01b03928316600482015291166024820152604401610598565b6000610eb88242610982565b60995460405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f319190611f02565b506000828152609a6020526040812060018101805491928492610f55908490611f38565b90915550508054600182015414156105fa576105fa836114dc565b610f7a3383611288565b610f965760405162461bcd60e51b815260040161059890611e84565b6105fa84848484611732565b610ff66040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000151581525090565b506000908152609a6020908152604091829020825160e081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546001600160a01b03908116608083015260059092015491821660a0820152600160a01b90910460ff16151560c082015290565b606061107a826111fd565b6110975760405163a913267f60e01b815260040160405180910390fd5b6000828152609a6020908152604091829020825160e08101845281548152600182015492810192909252600281015482840152600381015460608301526004808201546001600160a01b03908116608085015260059092015480831660a0850152600160a01b900460ff16151560c08401529251633dfcb37360e11b815291927f000000000000000000000000000000000000000000000000000000000000000090911691637bf966e6916111529130918891879101611f6b565b600060405180830381865afa15801561116f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111979190810190611f90565b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b600054610100900460ff166111f35760405162461bcd60e51b815260040161059890611ffe565b610e518282611765565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061124f82610ab7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611293826111fd565b6112f45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610598565b60006112ff83610ab7565b9050806001600160a01b0316846001600160a01b0316148061133a5750836001600160a01b031661132f84610600565b6001600160a01b0316145b8061134a575061134a818561119e565b949350505050565b826001600160a01b031661136582610ab7565b6001600160a01b0316146113c95760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610598565b6001600160a01b03821661142b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610598565b61143660008261121a565b6001600160a01b038316600090815260686020526040812080546001929061145f908490611eeb565b90915550506001600160a01b038216600090815260686020526040812080546001929061148d908490611f38565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061210d83398151915291a4505050565b6114e5816117b3565b609780549060006114f583612049565b90915550506000908152609a60205260408120818155600181018290556002810182905560038101919091556004810180546001600160a01b031916905560050180546001600160a81b0319169055565b6001600160a01b03821661159c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610598565b6115a5816111fd565b156115f25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610598565b6001600160a01b038216600090815260686020526040812080546001929061161b908490611f38565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b038616908117909155905183929060008051602061210d833981519152908290a45050565b816001600160a01b0316836001600160a01b031614156116c55760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610598565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61173d848484611352565b6117498484848461183c565b6105fa5760405162461bcd60e51b815260040161059890612060565b600054610100900460ff1661178c5760405162461bcd60e51b815260040161059890611ffe565b815161179f90606590602085019061193a565b50805161079490606690602084019061193a565b60006117be82610ab7565b90506117cb60008361121a565b6001600160a01b03811660009081526068602052604081208054600192906117f4908490611eeb565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b0384169060008051602061210d833981519152908390a45050565b60006001600160a01b0384163b1561192f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118809033908990889088906004016120b2565b6020604051808303816000875af19250505080156118bb575060408051601f3d908101601f191682019092526118b8918101906120ef565b60015b611915573d8080156118e9576040519150601f19603f3d011682016040523d82523d6000602084013e6118ee565b606091505b50805161190d5760405162461bcd60e51b815260040161059890612060565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061134a565b506001949350505050565b82805461194690611e49565b90600052602060002090601f01602090048101928261196857600085556119ae565b82601f1061198157805160ff19168380011785556119ae565b828001600101855582156119ae579182015b828111156119ae578251825591602001919060010190611993565b506119ba9291506119be565b5090565b5b808211156119ba57600081556001016119bf565b6001600160e01b0319811681146119e957600080fd5b50565b6000602082840312156119fe57600080fd5b8135611197816119d3565b60005b83811015611a24578181015183820152602001611a0c565b838111156105fa5750506000910152565b60008151808452611a4d816020860160208601611a09565b601f01601f19169290920160200192915050565b6020815260006111976020830184611a35565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ab357611ab3611a74565b604052919050565b600067ffffffffffffffff821115611ad557611ad5611a74565b50601f01601f191660200190565b6000611af6611af184611abb565b611a8a565b9050828152838383011115611b0a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611b3257600080fd5b61119783833560208501611ae3565b6001600160a01b03811681146119e957600080fd5b600080600060608486031215611b6b57600080fd5b833567ffffffffffffffff80821115611b8357600080fd5b611b8f87838801611b21565b94506020860135915080821115611ba557600080fd5b50611bb286828701611b21565b9250506040840135611bc381611b41565b809150509250925092565b600060208284031215611be057600080fd5b5035919050565b60008060408385031215611bfa57600080fd5b8235611c0581611b41565b946020939093013593505050565b600080600060608486031215611c2857600080fd5b8335611c3381611b41565b92506020840135611c4381611b41565b929592945050506040919091013590565b60008060408385031215611c6757600080fd5b50508035926020909101359150565b80151581146119e957600080fd5b600080600080600060a08688031215611c9c57600080fd5b8535611ca781611b41565b945060208601359350604086013592506060860135611cc581611b41565b91506080860135611cd581611c76565b809150509295509295909350565b600060208284031215611cf557600080fd5b813561119781611b41565b60008060408385031215611d1357600080fd5b8235611d1e81611b41565b91506020830135611d2e81611c76565b809150509250929050565b60008060008060808587031215611d4f57600080fd5b8435611d5a81611b41565b93506020850135611d6a81611b41565b925060408501359150606085013567ffffffffffffffff811115611d8d57600080fd5b8501601f81018713611d9e57600080fd5b611dad87823560208401611ae3565b91505092959194509250565b80518252602081015160208301526040810151604083015260608101516060830152608081015160018060a01b0380821660808501528060a08401511660a0850152505060c0810151151560c08301525050565b60e081016104828284611db9565b60008060408385031215611e2e57600080fd5b8235611e3981611b41565b91506020830135611d2e81611b41565b600181811c90821680611e5d57607f821691505b60208210811415611e7e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015611efd57611efd611ed5565b500390565b600060208284031215611f1457600080fd5b815161119781611c76565b600060208284031215611f3157600080fd5b5051919050565b60008219821115611f4b57611f4b611ed5565b500190565b6000600019821415611f6457611f64611ed5565b5060010190565b6001600160a01b038416815260208101839052610120810161134a6040830184611db9565b600060208284031215611fa257600080fd5b815167ffffffffffffffff811115611fb957600080fd5b8201601f81018413611fca57600080fd5b8051611fd8611af182611abb565b818152856020838501011115611fed57600080fd5b610aae826020830160208601611a09565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008161205857612058611ed5565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120e590830184611a35565b9695505050505050565b60006020828403121561210157600080fd5b8151611197816119d356feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220db80644d318b470d491afc2eea95b9e032581dfa20b826ddf3b0306fa81a9f0164736f6c634300080c0033";

type ERC20FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Faucet__factory extends ContractFactory {
  constructor(...args: ERC20FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Faucet> {
    return super.deploy(
      _metadataRenderer,
      overrides || {}
    ) as Promise<ERC20Faucet>;
  }
  override getDeployTransaction(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_metadataRenderer, overrides || {});
  }
  override attach(address: string): ERC20Faucet {
    return super.attach(address) as ERC20Faucet;
  }
  override connect(signer: Signer): ERC20Faucet__factory {
    return super.connect(signer) as ERC20Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FaucetInterface {
    return new utils.Interface(_abi) as ERC20FaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Faucet {
    return new Contract(address, _abi, signerOrProvider) as ERC20Faucet;
  }
}
