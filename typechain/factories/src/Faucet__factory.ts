/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faucet, FaucetInterface } from "../../src/Faucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "_metadataRenderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "claimableAmountForFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedAmountForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getFaucetDetailsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "faucetStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "supplier",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeRescinded",
            type: "bool",
          },
        ],
        internalType: "struct IFaucet.FaucetDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "_faucetToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataRenderer",
    outputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetExpiry",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_faucetStrategy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_canBeRescinded",
        type: "bool",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_remainingTokenDest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "rescind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200214e3803806200214e83398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b6080516120b9620000956000396000818161028501526110df01526120b96000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb465146102c2578063aad3ec96146102d5578063b88d4fde146102e8578063c38e4b6e146102fb578063c87b56dd14610404578063e985e9c51461041757600080fd5b80636352211e1461025a578063635f92ad1461026d578063703199701461028057806370a08231146102a757806395d89b41146102ba57600080fd5b806318160ddd1161010a57806318160ddd146101d75780631a3fbcf4146101ee57806323b872dd1461020e57806332f7a8221461022157806342842e0e1461023457806358a4c99f1461024757600080fd5b806301ffc9a71461014757806306fdde031461016f578063077f224a14610184578063081812fc14610199578063095ea7b3146101c4575b600080fd5b61015a6101553660046119b1565b61042a565b60405190151581526020015b60405180910390f35b61017761047c565b6040516101669190611a26565b610197610192366004611b1b565b61050e565b005b6101ac6101a7366004611b93565b6105f4565b6040516001600160a01b039091168152602001610166565b6101976101d2366004611bac565b61067c565b6101e060975481565b604051908152602001610166565b6101e06101fc366004611b93565b609b6020526000908152604090205481565b61019761021c366004611bd8565b61078d565b61019761022f366004611bac565b6107be565b610197610242366004611bd8565b61098b565b6101e0610255366004611c19565b6109a6565b6101ac610268366004611b93565b610b3a565b6101e061027b366004611c49565b610bb1565b6101ac7f000000000000000000000000000000000000000000000000000000000000000081565b6101e06102b5366004611ca8565b610de9565b610177610e70565b6101976102d0366004611cc5565b610e7f565b6101976102e3366004611bac565b610e8e565b6101976102f6366004611cfe565b610fc7565b6103aa610309366004611b93565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506000908152609a6020908152604091829020825160c0810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b0390811660608301526004909201549182166080820152600160a01b90910460ff16151560a082015290565b60405161016691908151815260208083015190820152604080830151908201526060808301516001600160a01b03908116918301919091526080808401519091169082015260a09182015115159181019190915260c00190565b610177610412366004611b93565b610ff9565b61015a610425366004611d7e565b611160565b60006001600160e01b031982166380ac58cd60e01b148061045b57506001600160e01b03198216635b5e139f60e01b145b8061047657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461048b90611dac565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790611dac565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050505050905090565b600054610100900460ff166105295760005460ff161561052d565b303b155b6105955760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156105b7576000805461ffff19166101011790555b6105c1848461118e565b609980546001600160a01b0319166001600160a01b03841617905580156105ee576000805461ff00191690555b50505050565b60006105ff826111bf565b6106605760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161058c565b506000908152606960205260409020546001600160a01b031690565b600061068782610b3a565b9050806001600160a01b0316836001600160a01b031614156106f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161058c565b336001600160a01b038216148061071157506107118133611160565b61077e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161058c565b61078883836111dc565b505050565b610797338261124a565b6107b35760405162461bcd60e51b815260040161058c90611de7565b610788838383611314565b6000818152609a60205260409020600401546001600160a01b031633146108205760405162461bcd60e51b81526020600482015260166024820152753932b9b1b4b7321d1037b7363c9039bab8383634b2b960511b604482015260640161058c565b6000818152609a6020526040902060040154600160a01b900460ff166108945760405162461bcd60e51b815260206004820152602360248201527f72657363696e643a2063616e6e6f742072657363696e6420746869732066617560448201526218d95d60ea1b606482015260840161058c565b6000818152609a60209081526040808320815160c0810183528154815260018201548185015260028201548184015260038201546001600160a01b0390811660608301526004909201548083166080830152600160a01b900460ff16151560a0820152609954868652609b909452919093205481519193929092169163a9059cbb91869161092191611e4e565b6040518363ffffffff1660e01b815260040161093e929190611e65565b6020604051808303816000875af115801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611e7e565b506107888261149e565b61078883838360405180602001604052806000815250610fc7565b6000828152609a60209081526040808320815160c08101835281548082526001830154948201859052600283015482850181905260038401546001600160a01b03908116606085018190526004958601549182166080860152600160a01b90910460ff16151560a08501529451631ebbf28960e21b8152938401919091526024830194909452604482019390935260648101859052839190637aefca2490608401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611e9b565b8251909150811115610b185760405162461bcd60e51b815260206004820152604d60248201527f636c61696d61626c65416d6f756e74466f724661756365743a2063616e6e6f7460448201527f2068617665206d6f726520636c61696d61626c65207468616e20746f74616c2060648201526c19985d58d95d08185b5bdd5b9d609a1b608482015260a40161058c565b6000858152609b6020526040902054610b319082611e4e565b95945050505050565b6000818152606760205260408120546001600160a01b0316806104765760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161058c565b6040516301ffc9a760e01b8152631ebbf28960e21b60048201526000906001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190611e7e565b610c835760405162461bcd60e51b815260206004820152602b60248201527f6d696e743a206d75737420737570706f7274204661756365745374726174656760448201526a7920696e7465726661636560a81b606482015260840161058c565b609754610c90878261150b565b6099546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190611e7e565b506040805160c0810182528781524260208083019182528284018981526001600160a01b03808a166060860190815233608087019081528a151560a0880190815260008a8152609a90965297852096518755945160018701559151600286015590516003850180549183166001600160a01b031990921691909117905591516004909301805494511515600160a01b026001600160a81b03199095169390921692909217929092179091556097805491610dc483611eb4565b909155505060988054906000610dd983611eb4565b9091555090979650505050505050565b60006001600160a01b038216610e545760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161058c565b506001600160a01b031660009081526068602052604090205490565b60606066805461048b90611dac565b610e8a33838361162c565b5050565b610e9781610b3a565b6001600160a01b0316336001600160a01b031614610ef75760405162461bcd60e51b815260206004820152601a60248201527f636c61696d3a206f6e6c79206f776e6572206f6620746f6b656e000000000000604482015260640161058c565b6000610f0382426109a6565b60995460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb90610f369086908590600401611e65565b6020604051808303816000875af1158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190611e7e565b506000828152609b602052604081208054839290610f98908490611ecf565b90915550506000828152609a6020908152604080832054609b909252909120541415610788576107888261149e565b610fd1338361124a565b610fed5760405162461bcd60e51b815260040161058c90611de7565b6105ee848484846116f7565b6060611004826111bf565b6110685760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161058c565b6000828152609a6020908152604091829020825160c0810184528154815260018201549281019290925260028101548284015260038101546001600160a01b0390811660608401526004918201548082166080850152600160a01b900460ff16151560a0840152925163c88be6b160e01b815291927f0000000000000000000000000000000000000000000000000000000000000000169163c88be6b191611114913091889101611e65565b600060405180830381865afa158015611131573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111599190810190611ee7565b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b600054610100900460ff166111b55760405162461bcd60e51b815260040161058c90611f55565b610e8a828261172a565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061121182610b3a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611255826111bf565b6112b65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161058c565b60006112c183610b3a565b9050806001600160a01b0316846001600160a01b031614806112fc5750836001600160a01b03166112f1846105f4565b6001600160a01b0316145b8061130c575061130c8185611160565b949350505050565b826001600160a01b031661132782610b3a565b6001600160a01b03161461138b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058c565b6001600160a01b0382166113ed5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b6113f86000826111dc565b6001600160a01b0383166000908152606860205260408120805460019290611421908490611e4e565b90915550506001600160a01b038216600090815260686020526040812080546001929061144f908490611ecf565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061206483398151915291a4505050565b6114a781611778565b609780549060006114b783611fa0565b90915550506000908152609a6020908152604080832083815560018101849055600281018490556003810180546001600160a01b031916905560040180546001600160a81b0319169055609b909152812055565b6001600160a01b0382166115615760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058c565b61156a816111bf565b156115b75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b6001600160a01b03821660009081526068602052604081208054600192906115e0908490611ecf565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612064833981519152908290a45050565b816001600160a01b0316836001600160a01b0316141561168a5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161058c565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611702848484611314565b61170e84848484611801565b6105ee5760405162461bcd60e51b815260040161058c90611fb7565b600054610100900460ff166117515760405162461bcd60e51b815260040161058c90611f55565b81516117649060659060208501906118ff565b5080516107889060669060208401906118ff565b600061178382610b3a565b90506117906000836111dc565b6001600160a01b03811660009081526068602052604081208054600192906117b9908490611e4e565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020612064833981519152908390a45050565b60006001600160a01b0384163b156118f457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611845903390899088908890600401612009565b6020604051808303816000875af1925050508015611880575060408051601f3d908101601f1916820190925261187d91810190612046565b60015b6118da573d8080156118ae576040519150601f19603f3d011682016040523d82523d6000602084013e6118b3565b606091505b5080516118d25760405162461bcd60e51b815260040161058c90611fb7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061130c565b506001949350505050565b82805461190b90611dac565b90600052602060002090601f01602090048101928261192d5760008555611973565b82601f1061194657805160ff1916838001178555611973565b82800160010185558215611973579182015b82811115611973578251825591602001919060010190611958565b5061197f929150611983565b5090565b5b8082111561197f5760008155600101611984565b6001600160e01b0319811681146119ae57600080fd5b50565b6000602082840312156119c357600080fd5b813561115981611998565b60005b838110156119e95781810151838201526020016119d1565b838111156105ee5750506000910152565b60008151808452611a128160208601602086016119ce565b601f01601f19169290920160200192915050565b60208152600061115960208301846119fa565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a7857611a78611a39565b604052919050565b600067ffffffffffffffff821115611a9a57611a9a611a39565b50601f01601f191660200190565b6000611abb611ab684611a80565b611a4f565b9050828152838383011115611acf57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611af757600080fd5b61115983833560208501611aa8565b6001600160a01b03811681146119ae57600080fd5b600080600060608486031215611b3057600080fd5b833567ffffffffffffffff80821115611b4857600080fd5b611b5487838801611ae6565b94506020860135915080821115611b6a57600080fd5b50611b7786828701611ae6565b9250506040840135611b8881611b06565b809150509250925092565b600060208284031215611ba557600080fd5b5035919050565b60008060408385031215611bbf57600080fd5b8235611bca81611b06565b946020939093013593505050565b600080600060608486031215611bed57600080fd5b8335611bf881611b06565b92506020840135611c0881611b06565b929592945050506040919091013590565b60008060408385031215611c2c57600080fd5b50508035926020909101359150565b80151581146119ae57600080fd5b600080600080600060a08688031215611c6157600080fd5b8535611c6c81611b06565b945060208601359350604086013592506060860135611c8a81611b06565b91506080860135611c9a81611c3b565b809150509295509295909350565b600060208284031215611cba57600080fd5b813561115981611b06565b60008060408385031215611cd857600080fd5b8235611ce381611b06565b91506020830135611cf381611c3b565b809150509250929050565b60008060008060808587031215611d1457600080fd5b8435611d1f81611b06565b93506020850135611d2f81611b06565b925060408501359150606085013567ffffffffffffffff811115611d5257600080fd5b8501601f81018713611d6357600080fd5b611d7287823560208401611aa8565b91505092959194509250565b60008060408385031215611d9157600080fd5b8235611d9c81611b06565b91506020830135611cf381611b06565b600181811c90821680611dc057607f821691505b60208210811415611de157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015611e6057611e60611e38565b500390565b6001600160a01b03929092168252602082015260400190565b600060208284031215611e9057600080fd5b815161115981611c3b565b600060208284031215611ead57600080fd5b5051919050565b6000600019821415611ec857611ec8611e38565b5060010190565b60008219821115611ee257611ee2611e38565b500190565b600060208284031215611ef957600080fd5b815167ffffffffffffffff811115611f1057600080fd5b8201601f81018413611f2157600080fd5b8051611f2f611ab682611a80565b818152856020838501011115611f4457600080fd5b610b318260208301602086016119ce565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081611faf57611faf611e38565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061203c908301846119fa565b9695505050505050565b60006020828403121561205857600080fd5b81516111598161199856feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122094b73118c52edb5bb2ff33f3f5cb8b6974340e3432de7735e4a198c4926f28c264736f6c634300080c0033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faucet> {
    return super.deploy(_metadataRenderer, overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_metadataRenderer, overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
