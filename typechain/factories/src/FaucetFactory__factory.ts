/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FaucetFactory,
  FaucetFactoryInterface,
} from "../../src/FaucetFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20FaucetImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethFaucetImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deployedFaucetsForToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20FaucetImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethFaucetImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "faucetForToken",
    outputs: [
      {
        internalType: "address",
        name: "faucetAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "deployed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "faucetForTokenView",
    outputs: [
      {
        internalType: "address",
        name: "faucetAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type FaucetFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FaucetFactory__factory extends ContractFactory {
  constructor(...args: FaucetFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20FaucetImplementation: string,
    _ethFaucetImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetFactory> {
    return super.deploy(
      _erc20FaucetImplementation,
      _ethFaucetImplementation,
      overrides || {}
    ) as Promise<FaucetFactory>;
  }
  override getDeployTransaction(
    _erc20FaucetImplementation: string,
    _ethFaucetImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20FaucetImplementation,
      _ethFaucetImplementation,
      overrides || {}
    );
  }
  override attach(address: string): FaucetFactory {
    return super.attach(address) as FaucetFactory;
  }
  override connect(signer: Signer): FaucetFactory__factory {
    return super.connect(signer) as FaucetFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetFactoryInterface {
    return new utils.Interface(_abi) as FaucetFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetFactory {
    return new Contract(address, _abi, signerOrProvider) as FaucetFactory;
  }
}
