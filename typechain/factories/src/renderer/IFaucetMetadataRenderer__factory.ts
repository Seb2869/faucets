/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFaucetMetadataRenderer,
  IFaucetMetadataRendererInterface,
} from "../../../src/renderer/IFaucetMetadataRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_faucetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "faucetStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "supplier",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeRescinded",
            type: "bool",
          },
        ],
        internalType: "struct IFaucet.FaucetDetails",
        name: "_fd",
        type: "tuple",
      },
    ],
    name: "getTokenURIForFaucet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IFaucetMetadataRenderer__factory {
  static readonly abi = _abi;
  static createInterface(): IFaucetMetadataRendererInterface {
    return new utils.Interface(_abi) as IFaucetMetadataRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFaucetMetadataRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IFaucetMetadataRenderer;
  }
}
