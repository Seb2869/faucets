/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ETHFaucet, ETHFaucetInterface } from "../../src/ETHFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "_metadataRenderer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalClaimableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "ClaimableOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "FaucetDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "MintInvalidStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "MintNoDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "MintNoValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "MintValueMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "OnlySupplier",
    type: "error",
  },
  {
    inputs: [],
    name: "RescindUnrescindable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "UnexpectedMsgValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "claimableAmountForFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedAmountForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucetTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getFaucetDetailsForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "faucetExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "faucetStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "supplier",
            type: "address",
          },
          {
            internalType: "bool",
            name: "canBeRescinded",
            type: "bool",
          },
        ],
        internalType: "struct IFaucet.FaucetDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataRenderer",
    outputs: [
      {
        internalType: "contract IFaucetMetadataRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_faucetStrategy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_canBeRescinded",
        type: "bool",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_remainingTokenDest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
    ],
    name: "rescind",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200214d3803806200214d83398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b6080516120b8620000956000396000818161032c015261108001526120b86000f3fe6080604052600436106101405760003560e01c80636352211e116100b6578063a22cb4651161006f578063a22cb46514610397578063aad3ec96146103b7578063b88d4fde146103d7578063c38e4b6e146103f7578063c87b56dd14610424578063e985e9c51461044457600080fd5b80636352211e146102e7578063635f92ad14610307578063703199701461031a57806370a082311461034e57806395d89b411461036e5780639d4993631461038357600080fd5b80631a3fbcf4116101085780631a3fbcf41461021a57806323b872dd1461024757806332f7a8221461026757806342842e0e146102875780634cd88b76146102a757806358a4c99f146102c757600080fd5b806301ffc9a71461014557806306fdde031461017a578063081812fc1461019c578063095ea7b3146101d457806318160ddd146101f6575b600080fd5b34801561015157600080fd5b5061016561016036600461195d565b610464565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061018f6104b6565b60405161017191906119d2565b3480156101a857600080fd5b506101bc6101b73660046119e5565b610548565b6040516001600160a01b039091168152602001610171565b3480156101e057600080fd5b506101f46101ef366004611a1a565b6105d5565b005b34801561020257600080fd5b5061020c60975481565b604051908152602001610171565b34801561022657600080fd5b5061020c6102353660046119e5565b609a6020526000908152604090205481565b34801561025357600080fd5b506101f4610262366004611a44565b6106e6565b34801561027357600080fd5b506101f4610282366004611a1a565b610717565b34801561029357600080fd5b506101f46102a2366004611a44565b610884565b3480156102b357600080fd5b506101f46102c2366004611b4d565b61089f565b3480156102d357600080fd5b5061020c6102e2366004611bb1565b610963565b3480156102f357600080fd5b506101bc6103023660046119e5565b610aa2565b61020c610315366004611be1565b610b19565b34801561032657600080fd5b506101bc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561035a57600080fd5b5061020c610369366004611c3c565b610d27565b34801561037a57600080fd5b5061018f610dae565b34801561038f57600080fd5b5060006101bc565b3480156103a357600080fd5b506101f46103b2366004611c57565b610dbd565b3480156103c357600080fd5b506101f46103d2366004611a1a565b610dcc565b3480156103e357600080fd5b506101f46103f2366004611c8e565b610ed1565b34801561040357600080fd5b506104176104123660046119e5565b610f09565b6040516101719190611d5e565b34801561043057600080fd5b5061018f61043f3660046119e5565b610fd6565b34801561045057600080fd5b5061016561045f366004611d6c565b611105565b60006001600160e01b031982166380ac58cd60e01b148061049557506001600160e01b03198216635b5e139f60e01b145b806104b057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104c590611d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546104f190611d9f565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b5050505050905090565b600061055382611133565b6105b95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105e082610aa2565b9050806001600160a01b0316836001600160a01b0316141561064e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105b0565b336001600160a01b038216148061066a575061066a8133611105565b6106d75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016105b0565b6106e18383611150565b505050565b6106f033826111be565b61070c5760405162461bcd60e51b81526004016105b090611dda565b6106e1838383611288565b6000818152609960205260409020600501546001600160a01b0316331461077557600081815260996020526040908190206005015490516261061160e31b81523360048201526001600160a01b0390911660248201526044016105b0565b600081815260996020526040902060050154600160a01b900460ff166107ae5760405163351bf21360e11b815260040160405180910390fd5b6000818152609960209081526040808320815160e081018352815481526001820154818501526002820154818401526003820154606082015260048201546001600160a01b03908116608083015260059092015480831660a0830152600160a01b900460ff16151560c0820152858552609a909352922054815191928516916108379190611e41565b604051600081818185875af1925050503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b5050506106e182611412565b6106e183838360405180602001604052806000815250610ed1565b600054610100900460ff166108ba5760005460ff16156108be565b303b155b6109215760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105b0565b600054610100900460ff16158015610943576000805461ffff19166101011790555b61094d8383611486565b80156106e1576000805461ff0019169055505050565b6000828152609960209081526040808320815160e081018352815480825260018301549482019490945260028201548184018190526003830154606083018190526004808501546001600160a01b039081166080860181905260059096015490811660a0860152600160a01b900460ff16151560c08501529451631ebbf28960e21b81529485019590955260248401526044830193909352606482018590528391637aefca2490608401602060405180830381865afa158015610a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4e9190611e58565b8251909150811115610a8057815160405163359f331360e11b81526105b0918391600401918252602082015260400190565b6000858152609a6020526040902054610a999082611e41565b95945050505050565b6000818152606760205260408120546001600160a01b0316806104b05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105b0565b6000843414610b4457604051638843447560e01b8152346004820152602481018690526044016105b0565b84610b625760405163346a748560e21b815260040160405180910390fd5b83610b8057604051631677bcf360e21b815260040160405180910390fd5b6040516301ffc9a760e01b8152631ebbf28960e21b60048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef9190611e71565b610c175760405163e0a8828960e01b81526001600160a01b03841660048201526024016105b0565b609854610c2487826114b7565b6040518060e00160405280878152602001600081526020014281526020018642610c4e9190611e8e565b81526001600160a01b03808716602080840191909152336040808501919091528715156060948501526000868152609983528181208651815592860151600184015590850151600283015592840151600382015560808401516004820180549184166001600160a01b031990921691909117905560a08401516005909101805460c0909501511515600160a01b026001600160a81b03199095169190921617929092179091556097805491610d0283611ea6565b909155505060988054906000610d1783611ea6565b9091555090979650505050505050565b60006001600160a01b038216610d925760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105b0565b506001600160a01b031660009081526068602052604090205490565b6060606680546104c590611d9f565b610dc83383836115d8565b5050565b610dd581610aa2565b6001600160a01b0316336001600160a01b031614610e235733610df782610aa2565b60405163a3ee740f60e01b81526001600160a01b039283166004820152911660248201526044016105b0565b6000610e2f8242610963565b9050826001600160a01b03168160405160006040518083038185875af1925050503d8060008114610e7c576040519150601f19603f3d011682016040523d82523d6000602084013e610e81565b606091505b5050506000828152609a602052604081208054839290610ea2908490611e8e565b9091555050600082815260996020908152604080832054609a9092529091205414156106e1576106e182611412565b610edb33836111be565b610ef75760405162461bcd60e51b81526004016105b090611dda565b610f03848484846116a3565b50505050565b610f5d6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000151581525090565b50600090815260996020908152604091829020825160e081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546001600160a01b03908116608083015260059092015491821660a0820152600160a01b90910460ff16151560c082015290565b6060610fe182611133565b610ffe5760405163a913267f60e01b815260040160405180910390fd5b600082815260996020908152604091829020825160e08101845281548152600182015492810192909252600281015482840152600381015460608301526004808201546001600160a01b03908116608085015260059092015480831660a0850152600160a01b900460ff16151560c08401529251633dfcb37360e11b815291927f000000000000000000000000000000000000000000000000000000000000000090911691637bf966e6916110b99130918891879101611ec1565b600060405180830381865afa1580156110d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110fe9190810190611ee6565b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061118582610aa2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006111c982611133565b61122a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105b0565b600061123583610aa2565b9050806001600160a01b0316846001600160a01b031614806112705750836001600160a01b031661126584610548565b6001600160a01b0316145b8061128057506112808185611105565b949350505050565b826001600160a01b031661129b82610aa2565b6001600160a01b0316146112ff5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105b0565b6001600160a01b0382166113615760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105b0565b61136c600082611150565b6001600160a01b0383166000908152606860205260408120805460019290611395908490611e41565b90915550506001600160a01b03821660009081526068602052604081208054600192906113c3908490611e8e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061206383398151915291a4505050565b61141b816116d6565b6097805490600061142b83611f54565b909155505060009081526099602090815260408083208381556001810184905560028101849055600381018490556004810180546001600160a01b031916905560050180546001600160a81b0319169055609a909152812055565b600054610100900460ff166114ad5760405162461bcd60e51b81526004016105b090611f6b565b610dc8828261175f565b6001600160a01b03821661150d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105b0565b61151681611133565b156115635760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105b0565b6001600160a01b038216600090815260686020526040812080546001929061158c908490611e8e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612063833981519152908290a45050565b816001600160a01b0316836001600160a01b031614156116365760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016105b0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116ae848484611288565b6116ba848484846117ad565b610f035760405162461bcd60e51b81526004016105b090611fb6565b60006116e182610aa2565b90506116ee600083611150565b6001600160a01b0381166000908152606860205260408120805460019290611717908490611e41565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020612063833981519152908390a45050565b600054610100900460ff166117865760405162461bcd60e51b81526004016105b090611f6b565b81516117999060659060208501906118ab565b5080516106e19060669060208401906118ab565b60006001600160a01b0384163b156118a057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117f1903390899088908890600401612008565b6020604051808303816000875af192505050801561182c575060408051601f3d908101601f1916820190925261182991810190612045565b60015b611886573d80801561185a576040519150601f19603f3d011682016040523d82523d6000602084013e61185f565b606091505b50805161187e5760405162461bcd60e51b81526004016105b090611fb6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611280565b506001949350505050565b8280546118b790611d9f565b90600052602060002090601f0160209004810192826118d9576000855561191f565b82601f106118f257805160ff191683800117855561191f565b8280016001018555821561191f579182015b8281111561191f578251825591602001919060010190611904565b5061192b92915061192f565b5090565b5b8082111561192b5760008155600101611930565b6001600160e01b03198116811461195a57600080fd5b50565b60006020828403121561196f57600080fd5b81356110fe81611944565b60005b8381101561199557818101518382015260200161197d565b83811115610f035750506000910152565b600081518084526119be81602086016020860161197a565b601f01601f19169290920160200192915050565b6020815260006110fe60208301846119a6565b6000602082840312156119f757600080fd5b5035919050565b80356001600160a01b0381168114611a1557600080fd5b919050565b60008060408385031215611a2d57600080fd5b611a36836119fe565b946020939093013593505050565b600080600060608486031215611a5957600080fd5b611a62846119fe565b9250611a70602085016119fe565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611abf57611abf611a80565b604052919050565b600067ffffffffffffffff821115611ae157611ae1611a80565b50601f01601f191660200190565b6000611b02611afd84611ac7565b611a96565b9050828152838383011115611b1657600080fd5b828260208301376000602084830101529392505050565b600082601f830112611b3e57600080fd5b6110fe83833560208501611aef565b60008060408385031215611b6057600080fd5b823567ffffffffffffffff80821115611b7857600080fd5b611b8486838701611b2d565b93506020850135915080821115611b9a57600080fd5b50611ba785828601611b2d565b9150509250929050565b60008060408385031215611bc457600080fd5b50508035926020909101359150565b801515811461195a57600080fd5b600080600080600060a08688031215611bf957600080fd5b611c02866119fe565b94506020860135935060408601359250611c1e606087016119fe565b91506080860135611c2e81611bd3565b809150509295509295909350565b600060208284031215611c4e57600080fd5b6110fe826119fe565b60008060408385031215611c6a57600080fd5b611c73836119fe565b91506020830135611c8381611bd3565b809150509250929050565b60008060008060808587031215611ca457600080fd5b611cad856119fe565b9350611cbb602086016119fe565b925060408501359150606085013567ffffffffffffffff811115611cde57600080fd5b8501601f81018713611cef57600080fd5b611cfe87823560208401611aef565b91505092959194509250565b80518252602081015160208301526040810151604083015260608101516060830152608081015160018060a01b0380821660808501528060a08401511660a0850152505060c0810151151560c08301525050565b60e081016104b08284611d0a565b60008060408385031215611d7f57600080fd5b611d88836119fe565b9150611d96602084016119fe565b90509250929050565b600181811c90821680611db357607f821691505b60208210811415611dd457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015611e5357611e53611e2b565b500390565b600060208284031215611e6a57600080fd5b5051919050565b600060208284031215611e8357600080fd5b81516110fe81611bd3565b60008219821115611ea157611ea1611e2b565b500190565b6000600019821415611eba57611eba611e2b565b5060010190565b6001600160a01b03841681526020810183905261012081016112806040830184611d0a565b600060208284031215611ef857600080fd5b815167ffffffffffffffff811115611f0f57600080fd5b8201601f81018413611f2057600080fd5b8051611f2e611afd82611ac7565b818152856020838501011115611f4357600080fd5b610a9982602083016020860161197a565b600081611f6357611f63611e2b565b506000190190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061203b908301846119a6565b9695505050505050565b60006020828403121561205757600080fd5b81516110fe8161194456feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220646708a508d0c72b0787706c9da1a712d23acdba2a0546cefbcf8ed8126fad2064736f6c634300080c0033";

type ETHFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHFaucet__factory extends ContractFactory {
  constructor(...args: ETHFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ETHFaucet> {
    return super.deploy(
      _metadataRenderer,
      overrides || {}
    ) as Promise<ETHFaucet>;
  }
  override getDeployTransaction(
    _metadataRenderer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_metadataRenderer, overrides || {});
  }
  override attach(address: string): ETHFaucet {
    return super.attach(address) as ETHFaucet;
  }
  override connect(signer: Signer): ETHFaucet__factory {
    return super.connect(signer) as ETHFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHFaucetInterface {
    return new utils.Interface(_abi) as ETHFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHFaucet {
    return new Contract(address, _abi, signerOrProvider) as ETHFaucet;
  }
}
