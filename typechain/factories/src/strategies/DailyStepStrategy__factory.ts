/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DailyStepStrategy,
  DailyStepStrategyInterface,
} from "../../../src/strategies/DailyStepStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_faucetExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "claimableAtTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610229806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780637aefca2414610074575b600080fd5b61005f610049366004610122565b6001600160e01b031916631ebbf28960e21b1490565b60405190151581526020015b60405180910390f35b610087610082366004610153565b610095565b60405190815260200161006b565b6000838210156100a75750600061011a565b8282106100b557508361011a565b6000620151806100c5868661019b565b6100cf91906101b2565b9050806100e057600091505061011a565b60006100ec82886101b2565b90506000620151806100fe888761019b565b61010891906101b2565b905061011482826101d4565b93505050505b949350505050565b60006020828403121561013457600080fd5b81356001600160e01b03198116811461014c57600080fd5b9392505050565b6000806000806080858703121561016957600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b6000828210156101ad576101ad610185565b500390565b6000826101cf57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156101ee576101ee610185565b50029056fea2646970667358221220800827a6a742e34b4087bebbe63f5e7572634b69680683c5c81c23cc1ece203b64736f6c634300080c0033";

type DailyStepStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DailyStepStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DailyStepStrategy__factory extends ContractFactory {
  constructor(...args: DailyStepStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DailyStepStrategy> {
    return super.deploy(overrides || {}) as Promise<DailyStepStrategy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DailyStepStrategy {
    return super.attach(address) as DailyStepStrategy;
  }
  override connect(signer: Signer): DailyStepStrategy__factory {
    return super.connect(signer) as DailyStepStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DailyStepStrategyInterface {
    return new utils.Interface(_abi) as DailyStepStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DailyStepStrategy {
    return new Contract(address, _abi, signerOrProvider) as DailyStepStrategy;
  }
}
