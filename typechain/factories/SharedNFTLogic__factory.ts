/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SharedNFTLogic,
  SharedNFTLogicInterface,
} from "../SharedNFTLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "unencoded",
        type: "bytes",
      },
    ],
    name: "base64Encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "animationUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "editionSize",
        type: "uint256",
      },
    ],
    name: "createMetadataEdition",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "mediaData",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "editionSize",
        type: "uint256",
      },
    ],
    name: "createMetadataJSON",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "json",
        type: "bytes",
      },
    ],
    name: "encodeMetadataJSON",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "numberToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "animationUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
    ],
    name: "tokenMediaData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type SharedNFTLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharedNFTLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharedNFTLogic__factory extends ContractFactory {
  constructor(...args: SharedNFTLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharedNFTLogic> {
    return super.deploy(overrides || {}) as Promise<SharedNFTLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SharedNFTLogic {
    return super.attach(address) as SharedNFTLogic;
  }
  override connect(signer: Signer): SharedNFTLogic__factory {
    return super.connect(signer) as SharedNFTLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharedNFTLogicInterface {
    return new utils.Interface(_abi) as SharedNFTLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharedNFTLogic {
    return new Contract(address, _abi, signerOrProvider) as SharedNFTLogic;
  }
}
