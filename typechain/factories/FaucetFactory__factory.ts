/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FaucetFactory, FaucetFactoryInterface } from "../FaucetFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20FaucetImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ethFaucetImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deployedFaucetsForToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20FaucetImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethFaucetImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "faucetForToken",
    outputs: [
      {
        internalType: "address",
        name: "faucetAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "deployed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "faucetForTokenView",
    outputs: [
      {
        internalType: "address",
        name: "faucetAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200197b3803806200197b833981016040819052620000349162000606565b600080546001600160a01b038085166001600160a01b031992831617835560018054918516919092161790556200006b9062000074565b50505062000aad565b6000806001600160a01b0383166200014d57600154620000a9906001600160a01b03166200027f602090811b620001f917901c565b6040805163266c45bb60e11b81526004810191909152600f60448201526e115d1a195c995d5b4811985d58d95d608a1b606482015260806024820152600760848201526608c86a85a8aa8960cb1b60a48201529091506001600160a01b03821690634cd88b769060c401600060405180830381600087803b1580156200012e57600080fd5b505af115801562000143573d6000803e3d6000fd5b505050506200024c565b60006200015a8462000331565b6040516020016200016c919062000671565b60408051601f19818403018152919052905060006200018b856200052b565b6040516020016200019d91906200069e565b6040516020818303038152906040529050620001e060008054906101000a90046001600160a01b03166001600160a01b03166200027f60201b620001f91760201c565b6040516303bf912560e11b81529093506001600160a01b0384169063077f224a906200021590859085908a90600401620006fa565b600060405180830381600087803b1580156200023057600080fd5b505af115801562000245573d6000803e3d6000fd5b5050505050505b6001600160a01b03928316600090815260026020526040902080546001600160a01b031916938216939093179092555090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166200032c5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b6060816001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa9250505080156200039557506040513d6000823e601f3d908101601f1916820160405262000392919081019062000752565b60015b62000525576040805160288082526060820190925260009160208201818036833701905050905060005b6014811015620004fa576000620003d882601362000820565b620003e59060086200083a565b620003f290600262000959565b62000407906001600160a01b03871662000984565b60f81b9050600060108260f81c6200042091906200099b565b60f81b905060008160f81c6010620004399190620009c0565b8360f81c620004499190620009e4565b60f81b90506200045982620005b3565b85620004678660026200083a565b815181106200047a576200047a62000a0a565b60200101906001600160f81b031916908160001a9053506200049c81620005b3565b85620004aa8660026200083a565b620004b790600162000a20565b81518110620004ca57620004ca62000a0a565b60200101906001600160f81b031916908160001a9053505050508080620004f19062000a3b565b915050620003bf565b50806040516020016200050e919062000a59565b604051602081830303815290604052915050919050565b92915050565b6060816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa9250505080156200058f57506040513d6000823e601f3d908101601f191682016040526200058c919081019062000752565b60015b620005255750506040805180820190915260038152623f3f3f60e81b602082015290565b6000600a60f883901c1015620005dd57620005d460f883901c603062000a85565b60f81b92915050565b620005d460f883901c605762000a85565b80516001600160a01b03811681146200032c57600080fd5b600080604083850312156200061a57600080fd5b6200062583620005ee565b91506200063560208401620005ee565b90509250929050565b60005b838110156200065b57818101518382015260200162000641565b838111156200066b576000848401525b50505050565b60008251620006858184602087016200063e565b660811985d58d95d60ca1b920191825250600701919050565b634643542d60e01b815260008251620006bf8160048501602087016200063e565b9190910160040192915050565b60008151808452620006e68160208601602086016200063e565b601f01601f19169290920160200192915050565b6060815260006200070f6060830186620006cc565b8281036020840152620007238186620006cc565b91505060018060a01b0383166040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200076557600080fd5b81516001600160401b03808211156200077d57600080fd5b818401915084601f8301126200079257600080fd5b815181811115620007a757620007a76200073c565b604051601f8201601f19908116603f01168101908382118183101715620007d257620007d26200073c565b81604052828152876020848701011115620007ec57600080fd5b620007ff8360208301602088016200063e565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156200083557620008356200080a565b500390565b60008160001904831182151516156200085757620008576200080a565b500290565b600181815b808511156200089d5781600019048211156200088157620008816200080a565b808516156200088f57918102915b93841c939080029062000861565b509250929050565b600082620008b65750600162000525565b81620008c55750600062000525565b8160018114620008de5760028114620008e95762000909565b600191505062000525565b60ff841115620008fd57620008fd6200080a565b50506001821b62000525565b5060208310610133831016604e8410600b84101617156200092e575081810a62000525565b6200093a83836200085c565b80600019048211156200095157620009516200080a565b029392505050565b6000620009678383620008a5565b9392505050565b634e487b7160e01b600052601260045260246000fd5b6000826200099657620009966200096e565b500490565b600060ff831680620009b157620009b16200096e565b8060ff84160491505092915050565b600060ff821660ff84168160ff04811182151516156200095157620009516200080a565b600060ff821660ff84168082101562000a015762000a016200080a565b90039392505050565b634e487b7160e01b600052603260045260246000fd5b6000821982111562000a365762000a366200080a565b500190565b600060001982141562000a525762000a526200080a565b5060010190565b61060f60f31b81526000825162000a788160028501602087016200063e565b9190910160020192915050565b600060ff821660ff84168060ff0382111562000aa55762000aa56200080a565b019392505050565b610ebe8062000abd6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063796dd0da11610050578063796dd0da146100ef578063dcd6615d1461010f578063de0fe52c1461014e57600080fd5b80631f31fdc21461006c57806329c60863146100b6575b600080fd5b60005461008c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008c6100c43660046108c3565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600260205260409020541690565b60015461008c9073ffffffffffffffffffffffffffffffffffffffff1681565b61012261011d3660046108c3565b610184565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683529015156020830152016100ad565b61008c61015c3660046108c3565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526002602052604081205490918291166101ca5760006101bf846102df565b946001945092505050565b505073ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604081205490911691565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166102da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff831661040a5760015461031f9073ffffffffffffffffffffffffffffffffffffffff166101f9565b604080517f4cd88b760000000000000000000000000000000000000000000000000000000081526004810191909152600f60448201527f457468657265756d204661756365740000000000000000000000000000000000606482015260806024820152600760848201527f4643542d4554480000000000000000000000000000000000000000000000000060a482015290915073ffffffffffffffffffffffffffffffffffffffff821690634cd88b769060c401600060405180830381600087803b1580156103ed57600080fd5b505af1158015610401573d6000803e3d6000fd5b50505050610532565b60006104158461058a565b6040516020016104259190610930565b60405160208183030381529060405290506000610441856107c4565b6040516020016104519190610971565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526000549091506104a49073ffffffffffffffffffffffffffffffffffffffff166101f9565b6040517f077f224a00000000000000000000000000000000000000000000000000000000815290935073ffffffffffffffffffffffffffffffffffffffff84169063077f224a906104fd90859085908a90600401610a00565b600060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b5050505050505b73ffffffffffffffffffffffffffffffffffffffff928316600090815260026020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016938216939093179092555090565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa92505050801561061657506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106139190810190610a7b565b60015b6107be576040805160288082526060820190925260009160208201818036833701905050905060005b6014811015610795576000610655826013610b75565b610660906008610b8c565b61066b906002610ce9565b61068b9073ffffffffffffffffffffffffffffffffffffffff8716610d24565b60f81b9050600060108260f81c6106a29190610d38565b60f81b905060008160f81c60106106b99190610d5a565b8360f81c6106c79190610d7b565b60f81b90506106d58261088d565b856106e1866002610b8c565b815181106106f1576106f1610d9e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506107298161088d565b85610735866002610b8c565b610740906001610dcd565b8151811061075057610750610d9e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350505050808061078d90610de5565b91505061063f565b50806040516020016107a79190610e1e565b604051602081830303815290604052915050919050565b92915050565b60608173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa92505050801561085057506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261084d9190810190610a7b565b60015b6107be57505060408051808201909152600381527f3f3f3f0000000000000000000000000000000000000000000000000000000000602082015290565b6000600a60f883901c10156108b4576108ab60f883901c6030610e63565b60f81b92915050565b6108ab60f883901c6057610e63565b6000602082840312156108d557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146108f957600080fd5b9392505050565b60005b8381101561091b578181015183820152602001610903565b8381111561092a576000848401525b50505050565b60008251610942818460208701610900565b7f2046617563657400000000000000000000000000000000000000000000000000920191825250600701919050565b7f4643542d000000000000000000000000000000000000000000000000000000008152600082516109a9816004850160208701610900565b9190910160040192915050565b600081518084526109ce816020860160208601610900565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606081526000610a1360608301866109b6565b8281036020840152610a2581866109b6565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610a8d57600080fd5b815167ffffffffffffffff80821115610aa557600080fd5b818401915084601f830112610ab957600080fd5b815181811115610acb57610acb610a4c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610b1157610b11610a4c565b81604052828152876020848701011115610b2a57600080fd5b610b3b836020830160208801610900565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610b8757610b87610b46565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc457610bc4610b46565b500290565b600181815b80851115610c2257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610c0857610c08610b46565b80851615610c1557918102915b93841c9390800290610bce565b509250929050565b600082610c39575060016107be565b81610c46575060006107be565b8160018114610c5c5760028114610c6657610c82565b60019150506107be565b60ff841115610c7757610c77610b46565b50506001821b6107be565b5060208310610133831016604e8410600b8410161715610ca5575081810a6107be565b610caf8383610bc9565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610ce157610ce1610b46565b029392505050565b60006108f98383610c2a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610d3357610d33610cf5565b500490565b600060ff831680610d4b57610d4b610cf5565b8060ff84160491505092915050565b600060ff821660ff84168160ff0481118215151615610ce157610ce1610b46565b600060ff821660ff841680821015610d9557610d95610b46565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610de057610de0610b46565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e1757610e17610b46565b5060010190565b7f3078000000000000000000000000000000000000000000000000000000000000815260008251610e56816002850160208701610900565b9190910160020192915050565b600060ff821660ff84168060ff03821115610e8057610e80610b46565b01939250505056fea26469706673582212200e3773c69da1e0d5b53db1659698f7a8c975bbcb94bbfef7b00a66ec0ecaafc564736f6c634300080c0033";

type FaucetFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FaucetFactory__factory extends ContractFactory {
  constructor(...args: FaucetFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20FaucetImplementation: string,
    _ethFaucetImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetFactory> {
    return super.deploy(
      _erc20FaucetImplementation,
      _ethFaucetImplementation,
      overrides || {}
    ) as Promise<FaucetFactory>;
  }
  override getDeployTransaction(
    _erc20FaucetImplementation: string,
    _ethFaucetImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20FaucetImplementation,
      _ethFaucetImplementation,
      overrides || {}
    );
  }
  override attach(address: string): FaucetFactory {
    return super.attach(address) as FaucetFactory;
  }
  override connect(signer: Signer): FaucetFactory__factory {
    return super.connect(signer) as FaucetFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetFactoryInterface {
    return new utils.Interface(_abi) as FaucetFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetFactory {
    return new Contract(address, _abi, signerOrProvider) as FaucetFactory;
  }
}
